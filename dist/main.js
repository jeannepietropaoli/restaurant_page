(()=>{"use strict";var n={35:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),c=t(667),s=t.n(c),l=new URL(t(480),t.b),A=a()(o()),d=s()(l);A.push([n.id,"\n@font-face {\n    font-family: 'bebas';\n    src: url("+d+") format('truetype');\n    font-weight: 600;\n    font-style: normal;\n  }\n\nbody{\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-repeat: no-repeat;\n    color: white;\n    font-family: 'bebas';\n}\n\n#content {\n    height: 100%;\n    width: 100%;\n    display: grid;\n    grid-template-rows: min-content 1fr ;\n}\n\n.nav {\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 200px;\n    align-items: center;\n}\n\n.nav > ul {\n    display: flex;\n    justify-content: flex-end;\n    gap: 20px;\n    list-style: none;\n}\n\n.nav > ul li {\n    padding: 12px 17px;\n}\n\n.nav > ul li:hover{\n    cursor: pointer;\n    background-color: rgba(108, 122, 137, 0.3);\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n}\n\n.main h1,\n.main button {\n    background-color: rgba(108, 122, 137, 0.3);\n    border: 2px solid white;\n    backdrop-filter: blur(2px);\n    font-weight: 900;\n}\n\n.main h1 {\n    width: fit-content ;\n    font-size: 70px;\n    padding: 15px 50px;\n    margin: 0;\n}\n\n.main button {\n    color: white;\n    padding: 8px 25px;\n    cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/css/homePage.css"],names:[],mappings:";AACA;IACI,oBAAoB;IACpB,+DAA2C;IAC3C,gBAAgB;IAChB,kBAAkB;EACpB;;AAEF;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,4BAA4B;IAC5B,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;;IAEI,0CAA0C;IAC1C,uBAAuB;IACvB,0BAA0B;IAC1B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:["\n@font-face {\n    font-family: 'bebas';\n    src: url('../bebas.ttf') format('truetype');\n    font-weight: 600;\n    font-style: normal;\n  }\n\nbody{\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-repeat: no-repeat;\n    color: white;\n    font-family: 'bebas';\n}\n\n#content {\n    height: 100%;\n    width: 100%;\n    display: grid;\n    grid-template-rows: min-content 1fr ;\n}\n\n.nav {\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 200px;\n    align-items: center;\n}\n\n.nav > ul {\n    display: flex;\n    justify-content: flex-end;\n    gap: 20px;\n    list-style: none;\n}\n\n.nav > ul li {\n    padding: 12px 17px;\n}\n\n.nav > ul li:hover{\n    cursor: pointer;\n    background-color: rgba(108, 122, 137, 0.3);\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n}\n\n.main h1,\n.main button {\n    background-color: rgba(108, 122, 137, 0.3);\n    border: 2px solid white;\n    backdrop-filter: blur(2px);\n    font-weight: 900;\n}\n\n.main h1 {\n    width: fit-content ;\n    font-size: 70px;\n    padding: 15px 50px;\n    margin: 0;\n}\n\n.main button {\n    color: white;\n    padding: 8px 25px;\n    cursor: pointer;\n}\n"],sourceRoot:""}]);const u=A},113:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,'#content {\n    position: relative;\n}\n\n.volet {\n    height: 0%;\n    width: 100%;\n    position: absolute;\n    background-color: white;\n    bottom: 0;\n    transition: height 1s;\n}\n\n.visible {\n    height: 70%;\n}\n\n#menu {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 400px);\n    margin: 35px;\n    justify-items: stretch;\n    gap: 75px;\n}\n\n.itemContainer{\n    display: grid;\n    grid-template-areas: \n        "name price"\n        "description price";\n    color: black;\n\n}\n\n.itemContainer p:nth-of-type(1) {\n    grid-area: name;\n}\n\n.itemContainer > p:nth-of-type(2) {\n    grid-area: description;\n}\n\n.itemContainer p:nth-of-type(3) {\n    grid-area: price;\n}\n\n/*   oooo */\n\n',"",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:"AAAA;IACI,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,qBAAqB;AACzB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,8CAA8C;IAC9C,YAAY;IACZ,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb;;2BAEuB;IACvB,YAAY;;AAEhB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;AACpB;;AAEA,WAAW",sourcesContent:['#content {\n    position: relative;\n}\n\n.volet {\n    height: 0%;\n    width: 100%;\n    position: absolute;\n    background-color: white;\n    bottom: 0;\n    transition: height 1s;\n}\n\n.visible {\n    height: 70%;\n}\n\n#menu {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 400px);\n    margin: 35px;\n    justify-items: stretch;\n    gap: 75px;\n}\n\n.itemContainer{\n    display: grid;\n    grid-template-areas: \n        "name price"\n        "description price";\n    color: black;\n\n}\n\n.itemContainer p:nth-of-type(1) {\n    grid-area: name;\n}\n\n.itemContainer > p:nth-of-type(2) {\n    grid-area: description;\n}\n\n.itemContainer p:nth-of-type(3) {\n    grid-area: price;\n}\n\n/*   oooo */\n\n'],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],l=r.base?s[0]+r.base:s[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=r(n,o),l=0;l<i.length;l++){var A=t(i[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},480:(n,e,t)=>{n.exports=t.p+"12e3683f9192436a7be8.ttf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{let n;const e=document.querySelector("#content"),r=()=>{n.classList.add("visible")};n=document.createElement("div"),e.appendChild(n),n.classList.add("volet");var o=t(379),i=t.n(o),a=t(795),c=t.n(a),s=t(569),l=t.n(s),A=t(565),d=t.n(A),u=t(216),p=t.n(u),m=t(589),f=t.n(m),h=t(113),C={};C.styleTagTransform=f(),C.setAttributes=d(),C.insert=l().bind(null,"head"),C.domAPI=c(),C.insertStyleElement=p(),i()(h.Z,C),h.Z&&h.Z.locals&&h.Z.locals;const g=(n,e,t)=>({name:n,description:e,price:t}),y=(()=>{const e=[g("Mozzarella and Feta Pita Grilled Cheese","Pita Grilled Cheese stuffed with Mediterranean favorites including melty mozzarella, feta, spinach, sundried tomatoes, and a little basil pesto","17$"),g("Mediterranean Orzo Salad Recipe","Mediterranean orzo salad recipe with feta, loads of crunchy vegetables, fresh herbs, and a tangy Greek dressing","16$"),g("Creamy Pesto Ravioli","Our specialty, home-made pasta filled with creamy fresh pesto","21$")];return{create:()=>{console.log("created");const t=(()=>{const e=document.createElement("div");return e.classList.add("main"),e.setAttribute("id","menu"),n.appendChild(e),e})();e.forEach((n=>{const e=document.createElement("div");e.classList.add("itemContainer"),t.appendChild(e),(()=>{for(const t in n){const r=document.createElement("p");r.textContent=n[t],e.appendChild(r)}})()}))}}})(),v=t.p+"fdd5521ee22f8d776677.png";var b=t(35),I={};I.styleTagTransform=f(),I.setAttributes=d(),I.insert=l().bind(null,"head"),I.domAPI=c(),I.insertStyleElement=p(),i()(b.Z,I),b.Z&&b.Z.locals&&b.Z.locals;const B=document.querySelector("#content"),x=(()=>{const n=document.querySelector("body");return{DISPLAY:()=>n.style.backgroundImage=`url(${v})`}})(),S=(()=>{const n=document.createElement("div");return n.classList.add("nav"),{display:()=>{n.appendChild((()=>{const n=document.createElement("h2");return n.textContent="French collar",n})()),n.appendChild((()=>{const n=document.createElement("ul");return["Home","Menu","Contact"].forEach((e=>{let t=document.createElement("li");t.textContent=e,n.appendChild(t)})),n})()),B.appendChild(n)},NAVBAR:n}})(),w=(()=>{const n=document.createElement("div");return n.classList.add("main"),{display:()=>{console.log("hehe"),B.appendChild(n),n.appendChild((()=>{const n=document.createElement("h1");return n.textContent="Fresh mediterranean cuisne",n})()),n.appendChild((()=>{const n=document.createElement("button");return n.textContent="Book a table",n})())},MAIN:n}})(),E=(Object.assign({},x.DISPLAY(),S.display(),w.display()),{home:document.querySelector("li:nth-of-type(1)"),menu:document.querySelector("li:nth-of-type(2)"),contact:document.querySelector("li:nth-of-type(3)")}),k=(()=>{let n="Home";return{setCurrentSection:e=>{n=e.target.innerText},isNotCurrentSection:e=>e!==n}})(),T=()=>{if(Array.from(e.children).some((n=>n.classList.contains("main")))){for(;document.querySelector(".main").firstChild;)document.querySelector(".main").removeChild(document.querySelector(".main").firstChild);e.removeChild(document.querySelector(".main"))}else Array.from(n.children).some((n=>n.classList.contains("main")))&&n.removeChild(document.querySelector(".main"))};for(let n=1;n<=2;n++)Object.values(E)[n].addEventListener("click",(function(n){k.isNotCurrentSection(n.target.innerText)&&(document.querySelector(".main")&&T(),document.querySelector(".visible")?(document.querySelector(".visible").style.height="0%",setTimeout((()=>{document.querySelector(".visible").style.height="70%"}),1e3),setTimeout((()=>{y.create()}),1e3)):(document.querySelector(".volet").style.height="70%",y.create()),r()),k.setCurrentSection(n)}));E.home.addEventListener("click",(function(e){k.isNotCurrentSection(e.target.innerText)&&(document.querySelector(".main")&&T(),document.querySelector(".visible")&&(document.querySelector(".visible").style.height="0%",n.classList.remove("visible")),setTimeout((()=>{w.display()}),100)),k.setCurrentSection(e)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFXSyxvQkFBb0I1RyxFQUFFUixPQUFPbUgsYUFkNUNqSCxTQUFTQyxjQUFjLFVBQVVtSCxJQUNqQ3BILFNBQVNDLGNBQWMsYUFOM0JELFNBQVNDLGNBQWMsWUFBWUosTUFBTWdJLE9BQVMsS0FDOUNDLFlBQVcsS0FBTTlILFNBQVNDLGNBQWMsWUFBWUosTUFBTWdJLE9BQVMsUUFBUSxLQU8zRUMsWUFBVyxLQUFNckQsRUFBWUUsV0FBVyxPQUd4QzNFLFNBQVNDLGNBQWMsVUFBVUosTUFBTWdJLE9BQVMsTUFDaERwRCxFQUFZRSxVQUVoQlQsS0FNSTJDLEVBQVdFLGtCQUFrQnpHLE1BSXJDa0csRUFBWUUsS0FBS2tCLGlCQUFpQixTQUFTLFNBQVN0SCxHQUM1Q3VHLEVBQVdLLG9CQUFvQjVHLEVBQUVSLE9BQU9tSCxhQUNwQ2pILFNBQVNDLGNBQWMsVUFBVW1ILElBQ2pDcEgsU0FBU0MsY0FBYyxjQUN2QkQsU0FBU0MsY0FBYyxZQUFZSixNQUFNZ0ksT0FBUyxLQUNsRDdELEVBQU1HLFVBQVUvRSxPQUFPLFlBRTNCMEksWUFBVyxLQUFNNUIsRUFBY1AsWUFBWSxNQUUvQ2tCLEVBQVdFLGtCQUFrQnpHLE8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY3NzL2hvbWVQYWdlLmNzcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY3NzL21lbnUuY3NzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2Uvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2Uvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2Uvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2Uvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vc3JjL3ZvbGV0LmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL3NyYy9jc3MvbWVudS5jc3M/ZGRlYyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvbWVudS5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY3NzL2hvbWVQYWdlLmNzcz8wOGRlIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL3NyYy9pbml0UGFnZUxvYWQuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9iZWJhcy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJcXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdiZWJhcyc7XFxuICAgIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIH1cXG5cXG5ib2R5e1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBmb250LWZhbWlseTogJ2JlYmFzJztcXG59XFxuXFxuI2NvbnRlbnQge1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IG1pbi1jb250ZW50IDFmciA7XFxufVxcblxcbi5uYXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIHBhZGRpbmc6IDBweCAyMDBweDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLm5hdiA+IHVsIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG4ubmF2ID4gdWwgbGkge1xcbiAgICBwYWRkaW5nOiAxMnB4IDE3cHg7XFxufVxcblxcbi5uYXYgPiB1bCBsaTpob3ZlcntcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwOCwgMTIyLCAxMzcsIDAuMyk7XFxufVxcblxcbi5tYWluIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxNXB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLm1haW4gaDEsXFxuLm1haW4gYnV0dG9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDgsIDEyMiwgMTM3LCAwLjMpO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZTtcXG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDJweCk7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5tYWluIGgxIHtcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50IDtcXG4gICAgZm9udC1zaXplOiA3MHB4O1xcbiAgICBwYWRkaW5nOiAxNXB4IDUwcHg7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLm1haW4gYnV0dG9uIHtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBwYWRkaW5nOiA4cHggMjVweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL2hvbWVQYWdlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiO0FBQ0E7SUFDSSxvQkFBb0I7SUFDcEIsK0RBQTJDO0lBQzNDLGdCQUFnQjtJQUNoQixrQkFBa0I7RUFDcEI7O0FBRUY7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLFlBQVk7SUFDWixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLDRCQUE0QjtJQUM1QixZQUFZO0lBQ1osb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxhQUFhO0lBQ2Isb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLDBDQUEwQztBQUM5Qzs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUztJQUNULHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkI7O0FBRUE7O0lBRUksMENBQTBDO0lBQzFDLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsU0FBUztBQUNiOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ2JlYmFzJztcXG4gICAgc3JjOiB1cmwoJy4uL2JlYmFzLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgfVxcblxcbmJvZHl7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGZvbnQtZmFtaWx5OiAnYmViYXMnO1xcbn1cXG5cXG4jY29udGVudCB7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogbWluLWNvbnRlbnQgMWZyIDtcXG59XFxuXFxuLm5hdiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgcGFkZGluZzogMHB4IDIwMHB4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubmF2ID4gdWwge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xcbiAgICBnYXA6IDIwcHg7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcblxcbi5uYXYgPiB1bCBsaSB7XFxuICAgIHBhZGRpbmc6IDEycHggMTdweDtcXG59XFxuXFxuLm5hdiA+IHVsIGxpOmhvdmVye1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTA4LCAxMjIsIDEzNywgMC4zKTtcXG59XFxuXFxuLm1haW4ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDE1cHg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubWFpbiBoMSxcXG4ubWFpbiBidXR0b24ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwOCwgMTIyLCAxMzcsIDAuMyk7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHdoaXRlO1xcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMnB4KTtcXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcXG59XFxuXFxuLm1haW4gaDEge1xcbiAgICB3aWR0aDogZml0LWNvbnRlbnQgO1xcbiAgICBmb250LXNpemU6IDcwcHg7XFxuICAgIHBhZGRpbmc6IDE1cHggNTBweDtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG4ubWFpbiBidXR0b24ge1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIHBhZGRpbmc6IDhweCAyNXB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIiNjb250ZW50IHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4udm9sZXQge1xcbiAgICBoZWlnaHQ6IDAlO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgYm90dG9tOiAwO1xcbiAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMXM7XFxufVxcblxcbi52aXNpYmxlIHtcXG4gICAgaGVpZ2h0OiA3MCU7XFxufVxcblxcbiNtZW51IHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIDQwMHB4KTtcXG4gICAgbWFyZ2luOiAzNXB4O1xcbiAgICBqdXN0aWZ5LWl0ZW1zOiBzdHJldGNoO1xcbiAgICBnYXA6IDc1cHg7XFxufVxcblxcbi5pdGVtQ29udGFpbmVye1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcXG4gICAgICAgIFxcXCJuYW1lIHByaWNlXFxcIlxcbiAgICAgICAgXFxcImRlc2NyaXB0aW9uIHByaWNlXFxcIjtcXG4gICAgY29sb3I6IGJsYWNrO1xcblxcbn1cXG5cXG4uaXRlbUNvbnRhaW5lciBwOm50aC1vZi10eXBlKDEpIHtcXG4gICAgZ3JpZC1hcmVhOiBuYW1lO1xcbn1cXG5cXG4uaXRlbUNvbnRhaW5lciA+IHA6bnRoLW9mLXR5cGUoMikge1xcbiAgICBncmlkLWFyZWE6IGRlc2NyaXB0aW9uO1xcbn1cXG5cXG4uaXRlbUNvbnRhaW5lciBwOm50aC1vZi10eXBlKDMpIHtcXG4gICAgZ3JpZC1hcmVhOiBwcmljZTtcXG59XFxuXFxuLyogICBvb29vICovXFxuXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9tZW51LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixTQUFTO0lBQ1QscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhDQUE4QztJQUM5QyxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGFBQWE7SUFDYjs7MkJBRXVCO0lBQ3ZCLFlBQVk7O0FBRWhCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQSxXQUFXXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIiNjb250ZW50IHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4udm9sZXQge1xcbiAgICBoZWlnaHQ6IDAlO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgYm90dG9tOiAwO1xcbiAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMXM7XFxufVxcblxcbi52aXNpYmxlIHtcXG4gICAgaGVpZ2h0OiA3MCU7XFxufVxcblxcbiNtZW51IHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIDQwMHB4KTtcXG4gICAgbWFyZ2luOiAzNXB4O1xcbiAgICBqdXN0aWZ5LWl0ZW1zOiBzdHJldGNoO1xcbiAgICBnYXA6IDc1cHg7XFxufVxcblxcbi5pdGVtQ29udGFpbmVye1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcXG4gICAgICAgIFxcXCJuYW1lIHByaWNlXFxcIlxcbiAgICAgICAgXFxcImRlc2NyaXB0aW9uIHByaWNlXFxcIjtcXG4gICAgY29sb3I6IGJsYWNrO1xcblxcbn1cXG5cXG4uaXRlbUNvbnRhaW5lciBwOm50aC1vZi10eXBlKDEpIHtcXG4gICAgZ3JpZC1hcmVhOiBuYW1lO1xcbn1cXG5cXG4uaXRlbUNvbnRhaW5lciA+IHA6bnRoLW9mLXR5cGUoMikge1xcbiAgICBncmlkLWFyZWE6IGRlc2NyaXB0aW9uO1xcbn1cXG5cXG4uaXRlbUNvbnRhaW5lciBwOm50aC1vZi10eXBlKDMpIHtcXG4gICAgZ3JpZC1hcmVhOiBwcmljZTtcXG59XFxuXFxuLyogICBvb29vICovXFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTsgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiZXhwb3J0IGxldCB2b2xldDtcbmV4cG9ydCBjb25zdCBDT05URU5UID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbnRlbnQnKTtcblxuZXhwb3J0IGNvbnN0IGFkZFZvbGV0ID0gKCgpPT4ge1xuICAgIGNvbnN0IGNyZWF0ZVZvbGV0ID0gKCgpPT4ge1xuICAgICAgICB2b2xldCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBDT05URU5ULmFwcGVuZENoaWxkKHZvbGV0KTtcbiAgICAgICAgdm9sZXQuY2xhc3NMaXN0LmFkZCgndm9sZXQnKTtcbiAgICB9KSgpXG4gICAgY29uc3QgbWFrZVZvbGV0VmlzaWJsZSA9ICgpPT4ge1xuICAgICAgIHZvbGV0LmNsYXNzTGlzdC5hZGQoJ3Zpc2libGUnKTtcbiAgICB9XG4gICAgcmV0dXJuIHttYWtlVm9sZXRWaXNpYmxlLFxuICAgIGNyZWF0ZVZvbGV0fTtcbn0pKCkiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWVudS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21lbnUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICcuL2Nzcy9tZW51LmNzcyc7XG5pbXBvcnQge3ZvbGV0fSBmcm9tICcuL3ZvbGV0JztcblxuY29uc3QgbWVudUl0ZW1zID0gKG5hbWUsIGRlc2NyaXB0aW9uLCBwcmljZSk9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZGVzY3JpcHRpb24sXG4gICAgICAgIHByaWNlXG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgZGlzcGxheU1lbnUgPSAoKCk9PiB7XG4gICAgY29uc3QgbWVudUNyZWF0aW9uID0gW1xuICAgICAgICBtZW51SXRlbXMoXCJNb3p6YXJlbGxhIGFuZCBGZXRhIFBpdGEgR3JpbGxlZCBDaGVlc2VcIiwgXCJQaXRhIEdyaWxsZWQgQ2hlZXNlIHN0dWZmZWQgd2l0aCBNZWRpdGVycmFuZWFuIGZhdm9yaXRlcyBpbmNsdWRpbmcgbWVsdHkgbW96emFyZWxsYSwgZmV0YSwgc3BpbmFjaCwgc3VuZHJpZWQgdG9tYXRvZXMsIGFuZCBhIGxpdHRsZSBiYXNpbCBwZXN0b1wiLCBcIjE3JFwiKSxcbiAgICAgICAgbWVudUl0ZW1zKFwiTWVkaXRlcnJhbmVhbiBPcnpvIFNhbGFkIFJlY2lwZVwiLCBcIk1lZGl0ZXJyYW5lYW4gb3J6byBzYWxhZCByZWNpcGUgd2l0aCBmZXRhLCBsb2FkcyBvZiBjcnVuY2h5IHZlZ2V0YWJsZXMsIGZyZXNoIGhlcmJzLCBhbmQgYSB0YW5neSBHcmVlayBkcmVzc2luZ1wiLCBcIjE2JFwiKSxcbiAgICAgICAgbWVudUl0ZW1zKFwiQ3JlYW15IFBlc3RvIFJhdmlvbGlcIiwgXCJPdXIgc3BlY2lhbHR5LCBob21lLW1hZGUgcGFzdGEgZmlsbGVkIHdpdGggY3JlYW15IGZyZXNoIHBlc3RvXCIsIFwiMjEkXCIpXG4gICAgXVxuICAgIGNvbnN0IGNyZWF0ZU1lbnVDb250YWluZXIgPSAoKT0+IHtcbiAgICAgICAgY29uc3QgbWVudUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBtZW51Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ21haW4nKTtcbiAgICAgICAgbWVudUNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywnbWVudScpO1xuICAgICAgICB2b2xldC5hcHBlbmRDaGlsZChtZW51Q29udGFpbmVyKTtcbiAgICAgICAgcmV0dXJuIG1lbnVDb250YWluZXI7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgY3JlYXRlIDogKCk9PntcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjcmVhdGVkJylcbiAgICAgICAgICAgIGNvbnN0IG1lbnVDb250YWluZXIgPSBjcmVhdGVNZW51Q29udGFpbmVyKCk7XG4gICAgICAgICAgICBtZW51Q3JlYXRpb24uZm9yRWFjaChkaXNoID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVtQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgaXRlbUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdpdGVtQ29udGFpbmVyJyk7XG4gICAgICAgICAgICAgICAgbWVudUNvbnRhaW5lci5hcHBlbmRDaGlsZChpdGVtQ29udGFpbmVyKVxuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1DcmVhdGlvbiA9ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIGRpc2gpe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXRlbURldGFpbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1EZXRhaWwudGV4dENvbnRlbnQgPSBkaXNoW2tleV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZENoaWxkKGl0ZW1EZXRhaWwpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSgpXG4gICAgICAgICAgICB9KSAgIFxuICAgICAgICB9XG4gICAgfVxufSkoKSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ob21lUGFnZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2hvbWVQYWdlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBiYW5uZXIgZnJvbSAnLi9iYW5uZXIxLnBuZyc7XG5pbXBvcnQgJy4vY3NzL2hvbWVQYWdlLmNzcyc7XG5cbmNvbnN0IENPTlRFTlQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGVudCcpO1xuXG5jb25zdCBCQU5ORVIgPSAoKCk9PiB7XG4gICAgY29uc3QgQk9EWSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBESVNQTEFZIDogKCk9PiBCT0RZLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoJHtiYW5uZXJ9KWBcbiAgICB9XG59KSgpXG5cbmNvbnN0IE5BVl9FTEVNRU5UUyA9ICgoKT0+IHtcbiAgICBjb25zdCBOQVZCQVIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBOQVZCQVIuY2xhc3NMaXN0LmFkZCgnbmF2Jyk7XG4gICAgY29uc3QgY3JlYXRlTmFtZSA9ICgpPT4ge1xuICAgICAgICBjb25zdCBSRVNUQVVSQU5UX05BTUUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xuICAgICAgICBSRVNUQVVSQU5UX05BTUUudGV4dENvbnRlbnQgPSBcIkZyZW5jaCBjb2xsYXJcIjtcbiAgICAgICAgcmV0dXJuIFJFU1RBVVJBTlRfTkFNRTtcbiAgICB9XG4gICAgY29uc3QgY3JlYXRlTmF2VWwgPSAoKT0+IHtcbiAgICAgICAgY29uc3QgTkFWX1VMID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICAgICAgY29uc3QgTkFWX0xJUyA9IFtcIkhvbWVcIiwgXCJNZW51XCIsIFwiQ29udGFjdFwiXTtcbiAgICAgICAgTkFWX0xJUy5mb3JFYWNoKGxpID0+IHtcbiAgICAgICAgICAgIGxldCBsaUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgICAgICAgbGlFbGVtZW50LnRleHRDb250ZW50ID0gbGk7XG4gICAgICAgICAgICBOQVZfVUwuYXBwZW5kQ2hpbGQobGlFbGVtZW50KTtcbiAgICB9KVxuICAgICAgICByZXR1cm4gTkFWX1VMO1xufVxuICAgIGNvbnN0IGRpc3BsYXkgPSAoKT0+IHtcbiAgICAgICAgTkFWQkFSLmFwcGVuZENoaWxkKGNyZWF0ZU5hbWUoKSk7XG4gICAgICAgIE5BVkJBUi5hcHBlbmRDaGlsZChjcmVhdGVOYXZVbCgpKTtcbiAgICAgICAgQ09OVEVOVC5hcHBlbmRDaGlsZChOQVZCQVIpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgIGRpc3BsYXksXG4gICAgICAgTkFWQkFSXG4gICAgfVxufSkoKVxuXG5leHBvcnQgY29uc3QgTUFJTl9FTEVNRU5UUyA9ICgoKT0+IHtcbiAgICBjb25zdCBNQUlOID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgTUFJTi5jbGFzc0xpc3QuYWRkKCdtYWluJyk7XG5cbiAgICBjb25zdCBjcmVhdGVNYWluSDEgPSAoKT0+IHtcbiAgICAgICAgY29uc3QgTUFJTl9IMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG4gICAgICAgIE1BSU5fSDEudGV4dENvbnRlbnQgPSAnRnJlc2ggbWVkaXRlcnJhbmVhbiBjdWlzbmUnO1xuICAgICAgICByZXR1cm4gTUFJTl9IMTtcbiAgICB9XG4gICAgY29uc3QgY3JlYXRlTWFpbkJ0biA9ICgpPT4ge1xuICAgICAgICBjb25zdCBNQUlOX0JUTiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICBNQUlOX0JUTi50ZXh0Q29udGVudCA9ICdCb29rIGEgdGFibGUnO1xuICAgICAgICByZXR1cm4gTUFJTl9CVE47XG4gICAgfVxuICAgIGNvbnN0IGRpc3BsYXkgPSAoKT0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ2hlaGUnKTtcbiAgICAgICAgQ09OVEVOVC5hcHBlbmRDaGlsZChNQUlOKTtcbiAgICAgICAgTUFJTi5hcHBlbmRDaGlsZChjcmVhdGVNYWluSDEoKSk7XG4gICAgICAgIE1BSU4uYXBwZW5kQ2hpbGQoY3JlYXRlTWFpbkJ0bigpKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGlzcGxheSxcbiAgICAgICAgTUFJTlxuICAgIH1cbn0pKClcblxuXG5leHBvcnQgY29uc3QgSE9NRVBBR0VfRUxFTUVOVFMgPSAoKCk9PiB7XG4gICAgcmV0dXJuICBPYmplY3QuYXNzaWduKHt9LFxuICAgICAgICBCQU5ORVIuRElTUExBWSgpLFxuICAgICAgICBOQVZfRUxFTUVOVFMuZGlzcGxheSgpLFxuICAgICAgICBNQUlOX0VMRU1FTlRTLmRpc3BsYXkoKSxcbiAgICApICAgICAgXG59KSgpXG5cbiIsImltcG9ydCB7YWRkVm9sZXR9IGZyb20gJy4vdm9sZXQnO1xuaW1wb3J0IHsgZGlzcGxheU1lbnUgfSBmcm9tICcuL21lbnUnO1xuaW1wb3J0IHtDT05URU5UfSBmcm9tICcuL3ZvbGV0JztcbmltcG9ydCB7dm9sZXR9IGZyb20gJy4vdm9sZXQnO1xuaW1wb3J0IHtNQUlOX0VMRU1FTlRTfSBmcm9tICcuL2luaXRQYWdlTG9hZCc7XG5cbmNvbnN0IG5hdkVsZW1lbnRzID0gKCgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBob21lIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbGk6bnRoLW9mLXR5cGUoMSknKSxcbiAgICAgICAgbWVudSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xpOm50aC1vZi10eXBlKDIpJyksXG4gICAgICAgIGNvbnRhY3QgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdsaTpudGgtb2YtdHlwZSgzKScpLFxuICAgIH1cbn0pKClcblxuY29uc3QgbmF2U2VjdGlvbiA9ICgoKT0+IHtcbiAgICBsZXQgY3VycmVudFNlY3Rpb24gPSAnSG9tZSc7XG4gICAgY29uc3Qgc2V0Q3VycmVudFNlY3Rpb24gPSAoZXZlbnQpPT4ge1xuICAgICAgICBjdXJyZW50U2VjdGlvbiA9IGV2ZW50LnRhcmdldC5pbm5lclRleHQ7XG4gICAgfVxuICAgIGNvbnN0IGlzTm90Q3VycmVudFNlY3Rpb24gPSAoZWxlbWVudENsaWNrZWQpPT4ge1xuICAgICAgICByZXR1cm4gZWxlbWVudENsaWNrZWQgIT09IGN1cnJlbnRTZWN0aW9uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBzZXRDdXJyZW50U2VjdGlvbixcbiAgICAgICAgaXNOb3RDdXJyZW50U2VjdGlvblxuICAgIH1cbn0pKClcblxuY29uc3QgcmVtb3ZlTWFpblNlY3Rpb24gPSAoKT0+IHtcbiAgICBpZiAoQXJyYXkuZnJvbShDT05URU5ULmNoaWxkcmVuKS5zb21lKGNoaWxkID0+IGNoaWxkLmNsYXNzTGlzdC5jb250YWlucygnbWFpbicpKSl7XG4gICAgICAgIHdoaWxlIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbicpLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluJykucmVtb3ZlQ2hpbGQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4nKS5maXJzdENoaWxkKTtcbiAgICAgICAgfVxuICAgICAgICBDT05URU5ULnJlbW92ZUNoaWxkKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluJykpO1xuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5mcm9tKHZvbGV0LmNoaWxkcmVuKS5zb21lKGNoaWxkID0+IGNoaWxkLmNsYXNzTGlzdC5jb250YWlucygnbWFpbicpKSl7XG4gICAgICAgIHZvbGV0LnJlbW92ZUNoaWxkKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluJykpXG4gICAgfVxufVxuXG5jb25zdCByb2xsV2hpdGVEaXYgPSAoKT0+IHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudmlzaWJsZScpLnN0eWxlLmhlaWdodCA9ICcwJSc7XG4gICAgICAgIHNldFRpbWVvdXQoKCk9PiB7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnZpc2libGUnKS5zdHlsZS5oZWlnaHQgPSAnNzAlJ30sIDEwMDApO1xufVxuXG5mdW5jdGlvbiBkaXNwbGF5Q29udGVudCgpe1xuICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbicpKSByZW1vdmVNYWluU2VjdGlvbigpO1xuICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudmlzaWJsZScpKXtcbiAgICAgICAgcm9sbFdoaXRlRGl2KCk7XG4gICAgICAgIHNldFRpbWVvdXQoKCk9PiB7ZGlzcGxheU1lbnUuY3JlYXRlKCl9LCAxMDAwKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy52b2xldCcpLnN0eWxlLmhlaWdodCA9ICc3MCUnO1xuICAgICAgICBkaXNwbGF5TWVudS5jcmVhdGUoKTtcbiAgICB9XG4gICAgYWRkVm9sZXQubWFrZVZvbGV0VmlzaWJsZSgpO1xufVxuXG5mb3IgKGxldCBpPTE7IGk8PTI7IGkrKyl7XG4gICAgT2JqZWN0LnZhbHVlcyhuYXZFbGVtZW50cylbaV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmIChuYXZTZWN0aW9uLmlzTm90Q3VycmVudFNlY3Rpb24oZS50YXJnZXQuaW5uZXJUZXh0KSkgZGlzcGxheUNvbnRlbnQoKTtcbiAgICAgICAgbmF2U2VjdGlvbi5zZXRDdXJyZW50U2VjdGlvbihlKTtcbiAgICB9KTtcbn1cblxubmF2RWxlbWVudHMuaG9tZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICBpZiAobmF2U2VjdGlvbi5pc05vdEN1cnJlbnRTZWN0aW9uKGUudGFyZ2V0LmlubmVyVGV4dCkpe1xuICAgICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4nKSkgcmVtb3ZlTWFpblNlY3Rpb24oKTtcbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy52aXNpYmxlJykpe1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnZpc2libGUnKS5zdHlsZS5oZWlnaHQgPSAnMCUnO1xuICAgICAgICAgICAgdm9sZXQuY2xhc3NMaXN0LnJlbW92ZSgndmlzaWJsZScpO1xuICAgICAgICB9XG4gICAgICAgIHNldFRpbWVvdXQoKCk9PiB7TUFJTl9FTEVNRU5UUy5kaXNwbGF5KCl9LCAxMDApO1xuICAgIH1cbiAgICBuYXZTZWN0aW9uLnNldEN1cnJlbnRTZWN0aW9uKGUpO1xufSk7XG5cblxuXG5cblxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJuYyIsInZvbGV0IiwiQ09OVEVOVCIsImFkZFZvbGV0IiwiY2xhc3NMaXN0IiwiYWRkIiwibWVudUl0ZW1zIiwibmFtZSIsImRlc2NyaXB0aW9uIiwicHJpY2UiLCJkaXNwbGF5TWVudSIsIm1lbnVDcmVhdGlvbiIsImNyZWF0ZSIsImNvbnNvbGUiLCJsb2ciLCJtZW51Q29udGFpbmVyIiwiY3JlYXRlTWVudUNvbnRhaW5lciIsImZvckVhY2giLCJkaXNoIiwiaXRlbUNvbnRhaW5lciIsIml0ZW1EZXRhaWwiLCJ0ZXh0Q29udGVudCIsIkJBTk5FUiIsIkJPRFkiLCJESVNQTEFZIiwiYmFja2dyb3VuZEltYWdlIiwiTkFWX0VMRU1FTlRTIiwiTkFWQkFSIiwiZGlzcGxheSIsIlJFU1RBVVJBTlRfTkFNRSIsImNyZWF0ZU5hbWUiLCJOQVZfVUwiLCJsaSIsImxpRWxlbWVudCIsImNyZWF0ZU5hdlVsIiwiTUFJTl9FTEVNRU5UUyIsIk1BSU4iLCJNQUlOX0gxIiwiY3JlYXRlTWFpbkgxIiwiTUFJTl9CVE4iLCJjcmVhdGVNYWluQnRuIiwibmF2RWxlbWVudHMiLCJhc3NpZ24iLCJob21lIiwibWVudSIsImNvbnRhY3QiLCJuYXZTZWN0aW9uIiwiY3VycmVudFNlY3Rpb24iLCJzZXRDdXJyZW50U2VjdGlvbiIsImV2ZW50IiwiaW5uZXJUZXh0IiwiaXNOb3RDdXJyZW50U2VjdGlvbiIsImVsZW1lbnRDbGlja2VkIiwicmVtb3ZlTWFpblNlY3Rpb24iLCJBcnJheSIsImZyb20iLCJjaGlsZHJlbiIsInNvbWUiLCJjaGlsZCIsImNvbnRhaW5zIiwidmFsdWVzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImhlaWdodCIsInNldFRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9