(()=>{"use strict";var n={446:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"#contact {\n    padding: 50px;\n    background-color: white;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 450px);\n    color: black;\n}\n\n.bundleInfos {\n    display: flex;\n}\n\n#map {\n    width: 400px;\n    height: auto;\n}\n\n.hoursContainer {\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n}\n\n.hoursContainer p {\n    margin: 0;\n    padding: 6px;\n}\n\n.hoursContainer h2 {\n    margin: 0;\n    padding: 6px;\n}\n\n.getInTouch {\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    border-left: 2px solid black;\n    padding: 20px;\n}\n\n.getInTouch > * {\n    margin: 0;\n    padding: 6px;\n}","",{version:3,sources:["webpack://./src/css/contact.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,8CAA8C;IAC9C,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,4BAA4B;IAC5B,aAAa;AACjB;;AAEA;IACI,SAAS;IACT,YAAY;AAChB",sourcesContent:["#contact {\n    padding: 50px;\n    background-color: white;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 450px);\n    color: black;\n}\n\n.bundleInfos {\n    display: flex;\n}\n\n#map {\n    width: 400px;\n    height: auto;\n}\n\n.hoursContainer {\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n}\n\n.hoursContainer p {\n    margin: 0;\n    padding: 6px;\n}\n\n.hoursContainer h2 {\n    margin: 0;\n    padding: 6px;\n}\n\n.getInTouch {\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    border-left: 2px solid black;\n    padding: 20px;\n}\n\n.getInTouch > * {\n    margin: 0;\n    padding: 6px;\n}"],sourceRoot:""}]);const c=i},35:(n,e,t)=>{t.d(e,{Z:()=>m});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),c=t(667),s=t.n(c),A=new URL(t(480),t.b),l=new URL(t(112),t.b),d=i()(o()),u=s()(A),p=s()(l);d.push([n.id,"\n@font-face {\n    font-family: 'bebas';\n    src: url("+u+") format('truetype');\n    font-weight: 600;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'frenchCollar';\n    src: url("+p+") format('truetype');\n    font-weight: 600;\n    font-style: normal;\n}\n\nbody{\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100vh;\n    background: no-repeat center center fixed; \n    background-size: cover;\n    color: white;\n    font-family: 'bebas';\n}\n\n#content {\n    height: 100%;\n    width: max(100%, 450px);\n    display: grid;\n    grid-template-rows: min-content 1fr ;\n    grid-template-columns: 100%;\n}\n\n.nav {\n    display: grid;\n    grid-template-columns: max-content 1fr max-content;\n    padding: 0px 25px;\n    align-items: center;\n}\n\n.nav h2 {\n    font-family: 'frenchCollar';\n    font-size: 25px;\n    grid-column: 1;\n}\n\n.nav > ul {\n    display: flex;\n    justify-content: flex-end;\n    gap: 20px;\n    list-style: none;\n    grid-column: 3 / -1;\n}\n\n.nav > ul li {\n    padding: 12px 17px;\n}\n\n.nav > ul li:hover{\n    cursor: pointer;\n    background-color: rgba(108, 122, 137, 0.3);\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n}\n\n.main h1,\n.main button {\n    background-color: rgba(108, 122, 137, 0.3);\n    border: 2px solid white;\n    backdrop-filter: blur(2px);\n    font-weight: 900;\n}\n\n.main h1 {\n    width: fit-content ;\n    font-size: 70px;\n    padding: 15px 50px;\n    margin: 0;\n    text-align: center;\n}\n\n.main button {\n    color: white;\n    padding: 8px 25px;\n    cursor: pointer;\n    position: relative;\n}\n\n.main button:hover {\n    background-color: white;\n    color: black;\n    top: -5px;\n\n}\n","",{version:3,sources:["webpack://./src/css/homePage.css"],names:[],mappings:";AACA;IACI,oBAAoB;IACpB,+DAA2C;IAC3C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,2BAA2B;IAC3B,+DAAkD;IAClD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,UAAU;IACV,WAAW;IACX,aAAa;IACb,yCAAyC;IACzC,sBAAsB;IACtB,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,oCAAoC;IACpC,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,kDAAkD;IAClD,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;IACT,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;;IAEI,0CAA0C;IAC1C,uBAAuB;IACvB,0BAA0B;IAC1B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,SAAS;;AAEb",sourcesContent:["\n@font-face {\n    font-family: 'bebas';\n    src: url('../bebas.ttf') format('truetype');\n    font-weight: 600;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'frenchCollar';\n    src: url('../frenchCollar.ttf') format('truetype');\n    font-weight: 600;\n    font-style: normal;\n}\n\nbody{\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100vh;\n    background: no-repeat center center fixed; \n    background-size: cover;\n    color: white;\n    font-family: 'bebas';\n}\n\n#content {\n    height: 100%;\n    width: max(100%, 450px);\n    display: grid;\n    grid-template-rows: min-content 1fr ;\n    grid-template-columns: 100%;\n}\n\n.nav {\n    display: grid;\n    grid-template-columns: max-content 1fr max-content;\n    padding: 0px 25px;\n    align-items: center;\n}\n\n.nav h2 {\n    font-family: 'frenchCollar';\n    font-size: 25px;\n    grid-column: 1;\n}\n\n.nav > ul {\n    display: flex;\n    justify-content: flex-end;\n    gap: 20px;\n    list-style: none;\n    grid-column: 3 / -1;\n}\n\n.nav > ul li {\n    padding: 12px 17px;\n}\n\n.nav > ul li:hover{\n    cursor: pointer;\n    background-color: rgba(108, 122, 137, 0.3);\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n}\n\n.main h1,\n.main button {\n    background-color: rgba(108, 122, 137, 0.3);\n    border: 2px solid white;\n    backdrop-filter: blur(2px);\n    font-weight: 900;\n}\n\n.main h1 {\n    width: fit-content ;\n    font-size: 70px;\n    padding: 15px 50px;\n    margin: 0;\n    text-align: center;\n}\n\n.main button {\n    color: white;\n    padding: 8px 25px;\n    cursor: pointer;\n    position: relative;\n}\n\n.main button:hover {\n    background-color: white;\n    color: black;\n    top: -5px;\n\n}\n"],sourceRoot:""}]);const m=d},113:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'#content {\n    position: relative;\n}\n\n.volet {\n    height: 0%;\n    width: 100%;\n    position: absolute;\n    background-color: white;\n    bottom: 0;\n    transition: height 1s;\n}\n\n.visible {\n    height: 70%;\n}\n\n#menu {\n    display: grid;\n    box-sizing: border-box;\n    grid-template-columns: repeat(auto-fit, 400px);\n    padding: 35px;\n    justify-items: stretch;\n    gap: 75px;\n    background-color: white;\n}\n\n.itemContainer{\n    display: grid;\n    grid-template-areas: \n        "name price"\n        "description price";\n    color: black;\n\n}\n\n.itemContainer p:nth-of-type(1) {\n    grid-area: name;\n}\n\n.itemContainer > p:nth-of-type(2) {\n    grid-area: description;\n    font-size: 11px;\n    font-style: italic;\n}\n\n.itemContainer p:nth-of-type(3) {\n    grid-area: price;\n}\n\n',"",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:"AAAA;IACI,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,qBAAqB;AACzB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8CAA8C;IAC9C,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb;;2BAEuB;IACvB,YAAY;;AAEhB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,sBAAsB;IACtB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:['#content {\n    position: relative;\n}\n\n.volet {\n    height: 0%;\n    width: 100%;\n    position: absolute;\n    background-color: white;\n    bottom: 0;\n    transition: height 1s;\n}\n\n.visible {\n    height: 70%;\n}\n\n#menu {\n    display: grid;\n    box-sizing: border-box;\n    grid-template-columns: repeat(auto-fit, 400px);\n    padding: 35px;\n    justify-items: stretch;\n    gap: 75px;\n    background-color: white;\n}\n\n.itemContainer{\n    display: grid;\n    grid-template-areas: \n        "name price"\n        "description price";\n    color: black;\n\n}\n\n.itemContainer p:nth-of-type(1) {\n    grid-area: name;\n}\n\n.itemContainer > p:nth-of-type(2) {\n    grid-area: description;\n    font-size: 11px;\n    font-style: italic;\n}\n\n.itemContainer p:nth-of-type(3) {\n    grid-area: price;\n}\n\n'],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],A=r.base?s[0]+r.base:s[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),A=0;A<a.length;A++){var l=t(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},480:(n,e,t)=>{n.exports=t.p+"12e3683f9192436a7be8.ttf"},112:(n,e,t)=>{n.exports=t.p+"76557091b77fecfd9411.ttf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{let n;const e=document.querySelector("#content"),r=()=>{n.classList.add("visible")};n=document.createElement("div"),e.appendChild(n),n.classList.add("volet");var o=t(379),a=t.n(o),i=t(795),c=t.n(i),s=t(569),A=t.n(s),l=t(565),d=t.n(l),u=t(216),p=t.n(u),m=t(589),h=t.n(m),f=t(113),C={};C.styleTagTransform=h(),C.setAttributes=d(),C.insert=A().bind(null,"head"),C.domAPI=c(),C.insertStyleElement=p(),a()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const g=(n,e,t)=>({name:n,description:e,price:t}),b=(()=>{const e=[g("Mozzarella and Feta Pita Grilled Cheese","Pita Grilled Cheese stuffed with Mediterranean favorites including melty mozzarella, feta, spinach, sundried tomatoes, and a little basil pesto","17$"),g("Mediterranean Orzo Salad Recipe","Mediterranean orzo salad recipe with feta, loads of crunchy vegetables, fresh herbs, and a tangy Greek dressing","16$"),g("Creamy Pesto Ravioli","Our specialty, home-made pasta filled with creamy fresh pesto","21$"),g("Easy Braised Lamb Shanks","Fall-off-the-bone tender braised lamb shanks in a rich red wine sauce with vegetables","24$"),g("Mediterranean-Style Fish Soup","fish soup with warm Eastern Mediterranean spices, loads of fresh herbs, and a big splash of lemon juice","15$"),g("Middle Eastern Baharat Baked Chicken Thighs","Juicy baked boneless chicken thighs get a Middle Eastern makeover with a bold garlicy marinade","21$"),g("Mediterranean-Style Turmeric Lemon Chicken Soup","fresh lemon juice, and amped up with veggies, herbs, and warm spices","19$")],t=(n,e,t)=>{const r=document.createElement("p");r.textContent=e[n],t.appendChild(r)};return{create:()=>{const r=(()=>{const e=document.createElement("div");return e.classList.add("main"),e.setAttribute("id","menu"),n.appendChild(e),e})();e.forEach((n=>{const e=(n=>{const e=document.createElement("div");return e.classList.add("itemContainer"),n.appendChild(e),e})(r);(()=>{for(const r in n)t(r,n,e)})()}))}}})(),y=t.p+"3db60972c9ed9b903b5b.png";var I=t(446),B={};B.styleTagTransform=h(),B.setAttributes=d(),B.insert=A().bind(null,"head"),B.domAPI=c(),B.insertStyleElement=p(),a()(I.Z,B),I.Z&&I.Z.locals&&I.Z.locals;const v=(n,e)=>({day:n,openingHours:e}),x=(()=>{const n=[v("Monday","11:30 - 21:00"),v("Tuesday","11:30 - 21:00"),v("Wednesday","11:30 - 21:00"),v("Thursday","11:30 - 21:00"),v("Friday","11:30 - 23:30"),v("Saturday","11:30 - 23:30"),v("Sunday","11:30 - 21:00")];return{display:()=>{const e=document.createElement("div");return e.classList.add("hoursContainer"),(n=>{const e=document.createElement("h2");e.textContent="Opening hours",n.appendChild(e)})(e),n.forEach((n=>{const t=document.createElement("p");e.appendChild(t);for(const e in n)t.textContent+=n[e]})),e}}})(),S=()=>{const n=document.createElement("div");return n.classList.add("getInTouch"),(n=>{const e=document.createElement("h2");e.textContent="Get in touch !",n.appendChild(e)})(n),(n=>{const e=document.createElement("p"),t=document.createElement("p");e.textContent="e-mail us at french_collar@resto.com",t.textContent="call us : 07 - 81 - 42 -94 - 78",n.append(e,t)})(n),n},E=n=>{const e=document.createElement("img");return e.src=y,n.appendChild(e),e.setAttribute("id","map"),e},k=(()=>{const e=document.createElement("div");return{create:()=>{e.classList.add("main"),e.setAttribute("id","contact"),n.appendChild(e),(()=>{const n=document.createElement("div");n.classList.add("bundleInfos"),e.appendChild(n),n.appendChild(x.display()),n.appendChild(S())})(),E(e)}}})(),w=t.p+"fdd5521ee22f8d776677.png";var T=t(35),L={};L.styleTagTransform=h(),L.setAttributes=d(),L.insert=A().bind(null,"head"),L.domAPI=c(),L.insertStyleElement=p(),a()(T.Z,L),T.Z&&T.Z.locals&&T.Z.locals;const Y=document.querySelector("#content"),q=(()=>{const n=document.querySelector("body");return{DISPLAY:()=>n.style.backgroundImage=`url(${w})`}})(),j=(()=>{const n=(()=>{const n=document.createElement("div");return n.classList.add("nav"),n})();return{display:()=>{n.appendChild((()=>{const n=document.createElement("h2");return n.textContent="French collar",n})()),n.appendChild((()=>{const n=document.createElement("ul");return["Home","Menu","Contact"].forEach((e=>{let t=document.createElement("li");t.textContent=e,n.appendChild(t)})),n})()),Y.appendChild(n)}}})(),M=(()=>{const n=(()=>{const n=document.createElement("div");return n.classList.add("main"),n})();return{display:()=>{Y.appendChild(n),n.appendChild((()=>{const n=document.createElement("h1");return n.textContent="Fresh mediterranean cuisne",n})()),n.appendChild((()=>{const n=document.createElement("button");return n.textContent="Book a table",n})())},MAIN:n}})(),Z=(Object.assign({},q.DISPLAY(),j.display(),M.display()),{home:document.querySelector("li:nth-of-type(1)"),menu:document.querySelector("li:nth-of-type(2)"),contact:document.querySelector("li:nth-of-type(3)")}),z=(()=>{let n="Home";return{setCurrentSection:e=>{n=e.target.innerText},isNotCurrentSection:e=>e!==n}})(),R=()=>{if(Array.from(e.children).some((n=>n.classList.contains("main")))){for(;document.querySelector(".main").firstChild;)document.querySelector(".main").removeChild(document.querySelector(".main").firstChild);e.removeChild(document.querySelector(".main"))}else if(Array.from(n.children).some((n=>n.classList.contains("main")))){for(;document.querySelector(".main").firstChild;)document.querySelector(".main").removeChild(document.querySelector(".main").firstChild);n.removeChild(document.querySelector(".main"))}};function P(n){document.querySelector(".main")&&R(),document.querySelector(".visible")?(document.querySelector(".visible").style.height="0%",setTimeout((()=>{document.querySelector(".visible").style.height="70%"}),1e3),setTimeout((()=>{"Menu"===n.target.innerText?b.create():k.create()}),1e3)):(document.querySelector(".volet").style.height="70%","Menu"===n.target.innerText?b.create():k.create()),r()}for(let n=1;n<=2;n++)Object.values(Z)[n].addEventListener("click",(function(n){z.isNotCurrentSection(n.target.innerText)&&P(n),z.setCurrentSection(n)}));Z.home.addEventListener("click",(function(e){z.isNotCurrentSection(e.target.innerText)&&(document.querySelector(".main")&&R(),document.querySelector(".visible")&&(document.querySelector(".visible").style.height="0%",n.classList.remove("visible")),setTimeout((()=>{M.display()}),100)),z.setCurrentSection(e)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,