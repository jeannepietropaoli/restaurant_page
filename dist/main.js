(()=>{"use strict";var e={35:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),c=t(667),s=t.n(c),l=new URL(t(480),t.b),d=i()(o()),A=s()(l);d.push([e.id,"\n@font-face {\n    font-family: 'bebas';\n    src: url("+A+") format('truetype');\n    font-weight: 600;\n    font-style: normal;\n  }\n\nbody{\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-repeat: no-repeat;\n    color: white;\n    font-family: 'bebas';\n}\n\n#content {\n    height: 100%;\n    width: 100%;\n    display: grid;\n    grid-template-rows: min-content 1fr ;\n}\n\n.nav {\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 200px;\n    align-items: center;\n}\n\n.nav > ul {\n    display: flex;\n    justify-content: flex-end;\n    gap: 20px;\n    list-style: none;\n}\n\n.nav > ul li {\n    padding: 12px 17px;\n}\n\n.nav > ul li:hover{\n    cursor: pointer;\n    background-color: rgba(108, 122, 137, 0.3);\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n}\n\n.main h1,\n.main button {\n    background-color: rgba(108, 122, 137, 0.3);\n    border: 2px solid white;\n    backdrop-filter: blur(2px);\n    font-weight: 900;\n}\n\n.main h1 {\n    width: fit-content ;\n    font-size: 70px;\n    padding: 15px 50px;\n    margin: 0;\n}\n\n.main button {\n    color: white;\n    padding: 8px 25px;\n    cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/css/homePage.css"],names:[],mappings:";AACA;IACI,oBAAoB;IACpB,+DAA2C;IAC3C,gBAAgB;IAChB,kBAAkB;EACpB;;AAEF;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,4BAA4B;IAC5B,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;;IAEI,0CAA0C;IAC1C,uBAAuB;IACvB,0BAA0B;IAC1B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:["\n@font-face {\n    font-family: 'bebas';\n    src: url('../bebas.ttf') format('truetype');\n    font-weight: 600;\n    font-style: normal;\n  }\n\nbody{\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-repeat: no-repeat;\n    color: white;\n    font-family: 'bebas';\n}\n\n#content {\n    height: 100%;\n    width: 100%;\n    display: grid;\n    grid-template-rows: min-content 1fr ;\n}\n\n.nav {\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 200px;\n    align-items: center;\n}\n\n.nav > ul {\n    display: flex;\n    justify-content: flex-end;\n    gap: 20px;\n    list-style: none;\n}\n\n.nav > ul li {\n    padding: 12px 17px;\n}\n\n.nav > ul li:hover{\n    cursor: pointer;\n    background-color: rgba(108, 122, 137, 0.3);\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n}\n\n.main h1,\n.main button {\n    background-color: rgba(108, 122, 137, 0.3);\n    border: 2px solid white;\n    backdrop-filter: blur(2px);\n    font-weight: 900;\n}\n\n.main h1 {\n    width: fit-content ;\n    font-size: 70px;\n    padding: 15px 50px;\n    margin: 0;\n}\n\n.main button {\n    color: white;\n    padding: 8px 25px;\n    cursor: pointer;\n}\n"],sourceRoot:""}]);const u=d},113:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,'#content {\n    position: relative;\n}\n\n.volet {\n    height: 0%;\n    width: 100%;\n    position: absolute;\n    background-color: white;\n    bottom: 0;\n    transition: height 1s;\n}\n\n.visible {\n    height: 70%;\n}\n\n#menu {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 400px);\n    padding: 35px;\n    justify-items: stretch;\n    gap: 75px;\n    background-color: white;\n}\n\n.itemContainer{\n    display: grid;\n    grid-template-areas: \n        "name price"\n        "description price";\n    color: black;\n\n}\n\n.itemContainer p:nth-of-type(1) {\n    grid-area: name;\n}\n\n.itemContainer > p:nth-of-type(2) {\n    grid-area: description;\n}\n\n.itemContainer p:nth-of-type(3) {\n    grid-area: price;\n}\n\n/*   oooo */\n\n',"",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:"AAAA;IACI,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,qBAAqB;AACzB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,8CAA8C;IAC9C,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb;;2BAEuB;IACvB,YAAY;;AAEhB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;AACpB;;AAEA,WAAW",sourcesContent:['#content {\n    position: relative;\n}\n\n.volet {\n    height: 0%;\n    width: 100%;\n    position: absolute;\n    background-color: white;\n    bottom: 0;\n    transition: height 1s;\n}\n\n.visible {\n    height: 70%;\n}\n\n#menu {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 400px);\n    padding: 35px;\n    justify-items: stretch;\n    gap: 75px;\n    background-color: white;\n}\n\n.itemContainer{\n    display: grid;\n    grid-template-areas: \n        "name price"\n        "description price";\n    color: black;\n\n}\n\n.itemContainer p:nth-of-type(1) {\n    grid-area: name;\n}\n\n.itemContainer > p:nth-of-type(2) {\n    grid-area: description;\n}\n\n.itemContainer p:nth-of-type(3) {\n    grid-area: price;\n}\n\n/*   oooo */\n\n'],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],d=a[l]||0,A="".concat(l," ").concat(d);a[l]=d+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=c,n.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=r(e,o),l=0;l<a.length;l++){var d=t(a[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},480:(e,n,t)=>{e.exports=t.p+"12e3683f9192436a7be8.ttf"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{let e;const n=document.querySelector("#content"),r=()=>{e.classList.add("visible")};e=document.createElement("div"),n.appendChild(e),e.classList.add("volet");var o=t(379),a=t.n(o),i=t(795),c=t.n(i),s=t(569),l=t.n(s),d=t(565),A=t.n(d),u=t(216),p=t.n(u),m=t(589),h=t.n(m),f=t(113),C={};C.styleTagTransform=h(),C.setAttributes=A(),C.insert=l().bind(null,"head"),C.domAPI=c(),C.insertStyleElement=p(),a()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const g=(e,n,t)=>({name:e,description:n,price:t}),y=(()=>{const n=[g("Mozzarella and Feta Pita Grilled Cheese","Pita Grilled Cheese stuffed with Mediterranean favorites including melty mozzarella, feta, spinach, sundried tomatoes, and a little basil pesto","17$"),g("Mediterranean Orzo Salad Recipe","Mediterranean orzo salad recipe with feta, loads of crunchy vegetables, fresh herbs, and a tangy Greek dressing","16$"),g("Creamy Pesto Ravioli","Our specialty, home-made pasta filled with creamy fresh pesto","21$"),g("Easy Braised Lamb Shanks","Fall-off-the-bone tender braised lamb shanks in a rich red wine sauce with vegetables","24$"),g("Mediterranean-Style Fish Soup","fish soup with warm Eastern Mediterranean spices, loads of fresh herbs, and a big splash of lemon juice","15$"),g("Middle Eastern Baharat Baked Chicken Thighs","Juicy baked boneless chicken thighs get a Middle Eastern makeover with a bold garlicy marinade","21$"),g("Mediterranean-Style Turmeric Lemon Chicken Soup","fresh lemon juice, and amped up with veggies, herbs, and warm spices","19$")];return{create:()=>{console.log("created");const t=(()=>{const n=document.createElement("div");return n.classList.add("main"),n.setAttribute("id","menu"),e.appendChild(n),n})();n.forEach((e=>{const n=document.createElement("div");n.classList.add("itemContainer"),t.appendChild(n),(()=>{for(const t in e){const r=document.createElement("p");r.textContent=e[t],n.appendChild(r)}})()}))}}})(),b=(e,n)=>({day:e,openingHours:n}),v=(()=>{const n=[b("Monday","11:30 - 21:00"),b("Tuesday","11:30 - 21:00"),b("Wednesday","11:30 - 21:00"),b("Thursday","11:30 - 21:00"),b("Friday","11:30 - 23:30"),b("Saturday","11:30 - 23:30"),b("Sunday","11:30 - 21:00")];return{create:()=>{console.log("created contact"),(()=>{const t=document.createElement("div");(()=>{const n=document.createElement("div");return n.classList.add("main"),n.setAttribute("id","contact"),e.appendChild(n),n})().appendChild(t),t.style.color="black",n.forEach((e=>{const n=document.createElement("p");t.appendChild(n);for(const t in e)n.textContent+=e[t]}))})()}}})(),B=t.p+"fdd5521ee22f8d776677.png";var I=t(35),x={};x.styleTagTransform=h(),x.setAttributes=A(),x.insert=l().bind(null,"head"),x.domAPI=c(),x.insertStyleElement=p(),a()(I.Z,x),I.Z&&I.Z.locals&&I.Z.locals;const S=document.querySelector("#content"),w=(()=>{const e=document.querySelector("body");return{DISPLAY:()=>e.style.backgroundImage=`url(${B})`}})(),E=(()=>{const e=document.createElement("div");return e.classList.add("nav"),{display:()=>{e.appendChild((()=>{const e=document.createElement("h2");return e.textContent="French collar",e})()),e.appendChild((()=>{const e=document.createElement("ul");return["Home","Menu","Contact"].forEach((n=>{let t=document.createElement("li");t.textContent=n,e.appendChild(t)})),e})()),S.appendChild(e)},NAVBAR:e}})(),k=(()=>{const e=document.createElement("div");return e.classList.add("main"),{display:()=>{console.log("hehe"),S.appendChild(e),e.appendChild((()=>{const e=document.createElement("h1");return e.textContent="Fresh mediterranean cuisne",e})()),e.appendChild((()=>{const e=document.createElement("button");return e.textContent="Book a table",e})())},MAIN:e}})(),T=(Object.assign({},w.DISPLAY(),E.display(),k.display()),{home:document.querySelector("li:nth-of-type(1)"),menu:document.querySelector("li:nth-of-type(2)"),contact:document.querySelector("li:nth-of-type(3)")}),M=(()=>{let e="Home";return{setCurrentSection:n=>{e=n.target.innerText},isNotCurrentSection:n=>n!==e}})(),j=()=>{if(Array.from(n.children).some((e=>e.classList.contains("main")))){for(;document.querySelector(".main").firstChild;)document.querySelector(".main").removeChild(document.querySelector(".main").firstChild);n.removeChild(document.querySelector(".main"))}else Array.from(e.children).some((e=>e.classList.contains("main")))&&e.removeChild(document.querySelector(".main"))};function q(e){console.log(e.target.innerText),document.querySelector(".main")&&j(),document.querySelector(".visible")?(document.querySelector(".visible").style.height="0%",setTimeout((()=>{document.querySelector(".visible").style.height="70%"}),1e3),setTimeout((()=>{"Menu"===e.target.innerText?y.create():v.create()}),1e3)):(document.querySelector(".volet").style.height="70%",y.create()),r()}for(let e=1;e<=2;e++)Object.values(T)[e].addEventListener("click",(function(e){M.isNotCurrentSection(e.target.innerText)&&q(e),M.setCurrentSection(e)}));T.home.addEventListener("click",(function(n){M.isNotCurrentSection(n.target.innerText)&&(document.querySelector(".main")&&j(),document.querySelector(".visible")&&(document.querySelector(".visible").style.height="0%",e.classList.remove("visible")),setTimeout((()=>{k.display()}),100)),M.setCurrentSection(n)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,