(()=>{"use strict";var e={35:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),i=t(645),a=t.n(i),c=t(667),s=t.n(c),l=new URL(t(480),t.b),u=a()(r()),d=s()(l);u.push([e.id,"\n@font-face {\n    font-family: 'bebas';\n    src: url("+d+") format('truetype');\n    font-weight: 600;\n    font-style: normal;\n  }\n\nbody{\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    color: white;\n    font-family: 'bebas';\n}\n\n#content {\n    height: 100%;\n    width: 100%;\n    display: grid;\n    grid-template-rows: min-content 1fr ;\n}\n\n.nav {\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 200px;\n    align-items: center;\n}\n\n.nav > ul {\n    display: flex;\n    justify-content: flex-end;\n    gap: 20px;\n    list-style: none;\n}\n\n.nav > ul li {\n    padding: 12px 17px;\n}\n\n.nav > ul li:hover{\n    cursor: pointer;\n    background-color: rgba(108, 122, 137, 0.3);\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n}\n\n.main h1,\n.main button {\n    background-color: rgba(108, 122, 137, 0.3);\n    border: 2px solid white;\n    backdrop-filter: blur(2px);\n    font-weight: 900;\n}\n\n.main h1 {\n    width: fit-content ;\n    font-size: 70px;\n    padding: 15px 50px;\n    margin: 0;\n}\n\n.main button {\n    color: white;\n    padding: 8px 25px;\n    cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/css/homePage.css"],names:[],mappings:";AACA;IACI,oBAAoB;IACpB,+DAA2C;IAC3C,gBAAgB;IAChB,kBAAkB;EACpB;;AAEF;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;;IAEI,0CAA0C;IAC1C,uBAAuB;IACvB,0BAA0B;IAC1B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:["\n@font-face {\n    font-family: 'bebas';\n    src: url('../bebas.ttf') format('truetype');\n    font-weight: 600;\n    font-style: normal;\n  }\n\nbody{\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    color: white;\n    font-family: 'bebas';\n}\n\n#content {\n    height: 100%;\n    width: 100%;\n    display: grid;\n    grid-template-rows: min-content 1fr ;\n}\n\n.nav {\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 200px;\n    align-items: center;\n}\n\n.nav > ul {\n    display: flex;\n    justify-content: flex-end;\n    gap: 20px;\n    list-style: none;\n}\n\n.nav > ul li {\n    padding: 12px 17px;\n}\n\n.nav > ul li:hover{\n    cursor: pointer;\n    background-color: rgba(108, 122, 137, 0.3);\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n}\n\n.main h1,\n.main button {\n    background-color: rgba(108, 122, 137, 0.3);\n    border: 2px solid white;\n    backdrop-filter: blur(2px);\n    font-weight: 900;\n}\n\n.main h1 {\n    width: fit-content ;\n    font-size: 70px;\n    padding: 15px 50px;\n    margin: 0;\n}\n\n.main button {\n    color: white;\n    padding: 8px 25px;\n    cursor: pointer;\n}\n"],sourceRoot:""}]);const A=u},113:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,"#content {\n    position: relative;\n}\n\n.volet {\n    height: 0%;\n    width: 100%;\n    position: absolute;\n    background-color: white;\n    bottom: 0;\n    transition: height 1s;\n}\n\n.visible {\n    height: 70%;\n}\n\n/*   oooo */\n\n","",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:"AAAA;IACI,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,qBAAqB;AACzB;;AAEA;IACI,WAAW;AACf;;AAEA,WAAW",sourcesContent:["#content {\n    position: relative;\n}\n\n.volet {\n    height: 0%;\n    width: 100%;\n    position: absolute;\n    background-color: white;\n    bottom: 0;\n    transition: height 1s;\n}\n\n.visible {\n    height: 70%;\n}\n\n/*   oooo */\n\n"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);o&&a[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),n.push(u))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],l=o.base?s[0]+o.base:s[0],u=i[l]||0,d="".concat(l," ").concat(u);i[l]=u+1;var A=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var m=r(p,o);o.byIndex=c,n.splice(c,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var s=o(e,r),l=0;l<i.length;l++){var u=t(i[l]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},480:(e,n,t)=>{e.exports=t.p+"12e3683f9192436a7be8.ttf"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{const e=t.p+"fdd5521ee22f8d776677.png";var n=t(379),o=t.n(n),r=t(795),i=t.n(r),a=t(569),c=t.n(a),s=t(565),l=t.n(s),u=t(216),d=t.n(u),A=t(589),p=t.n(A),m=t(35),f={};f.styleTagTransform=p(),f.setAttributes=l(),f.insert=c().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=d(),o()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const h=document.querySelector("#content"),g=(()=>{const n=document.querySelector("body");return{DISPLAY:()=>n.style.backgroundImage=`url(${e})`}})(),v=(()=>{const e=document.createElement("div");return e.classList.add("nav"),{display:()=>{e.appendChild((()=>{const e=document.createElement("h2");return e.textContent="French collar",e})()),e.appendChild((()=>{const e=document.createElement("ul");return["Home","Menu","Contact"].forEach((n=>{let t=document.createElement("li");t.textContent=n,e.appendChild(t)})),e})()),h.appendChild(e)},NAVBAR:e}})(),C=(()=>{const e=document.createElement("div");return e.classList.add("main"),{display:()=>{console.log("hehe"),h.appendChild(e),e.appendChild((()=>{const e=document.createElement("h1");return e.textContent="Fresh mediterranean cuisne",e})()),e.appendChild((()=>{const e=document.createElement("button");return e.textContent="Book a table",e})())},MAIN:e}})();let y;Object.assign({},g.DISPLAY(),v.display(),C.display());const b=document.querySelector("#content"),I=()=>{y.classList.add("visible")};y=document.createElement("div"),b.appendChild(y),y.classList.add("volet");var B=t(113),x={};x.styleTagTransform=p(),x.setAttributes=l(),x.insert=c().bind(null,"head"),x.domAPI=i(),x.insertStyleElement=d(),o()(B.Z,x),B.Z&&B.Z.locals&&B.Z.locals;const S=(e,n,t)=>({name:e,description:n,price:t}),w=(()=>{const e=[S("Mozzarella and Feta Pita Grilled Cheese","Pita Grilled Cheese stuffed with Mediterranean favorites including melty mozzarella, feta, spinach, sundried tomatoes, and a little basil pesto","17$"),S("Mediterranean Orzo Salad Recipe","Mediterranean orzo salad recipe with feta, loads of crunchy vegetables, fresh herbs, and a tangy Greek dressing","16$"),S("Creamy Pesto Ravioli","Our specialty, home-made pasta filled with creamy fresh pesto","21$")];return{create:()=>{console.log("created");const n=(()=>{const e=document.createElement("div");return e.classList.add("main"),y.appendChild(e),e})();e.forEach((e=>{(()=>{for(const t in e){const o=document.createElement("p");o.textContent=e[t],o.style.color="blue",n.appendChild(o)}})()}))}}})();console.log(Array.from(b.children).some((e=>e.classList.contains("main"))));const E=document.querySelector("li:nth-of-type(1)"),k=document.querySelector("li:nth-of-type(2)"),q=document.querySelector("li:nth-of-type(3)");let T="Home";function L(e){return e!==T}const j=()=>{if(Array.from(b.children).some((e=>e.classList.contains("main")))){for(;document.querySelector(".main").firstChild;)document.querySelector(".main").removeChild(document.querySelector(".main").firstChild);b.removeChild(document.querySelector(".main"))}else Array.from(y.children).some((e=>e.classList.contains("main")))&&y.removeChild(document.querySelector(".main"))},M=()=>{document.querySelector(".visible").style.height="0%",setTimeout((()=>{document.querySelector(".visible").style.height="70%"}),1e3)};k.addEventListener("click",(function(e){console.log(T),L(e.target.innerText)&&(document.querySelector(".main")&&j(),document.querySelector(".visible")?(M(),setTimeout((()=>{w.create()}),1e3)):(document.querySelector(".volet").style.height="70%",w.create()),I()),T="Menu"})),q.addEventListener("click",(function(e){console.log(T),L(e.target.innerText)&&(document.querySelector(".main")&&j(),document.querySelector(".visible")?(M(),setTimeout((()=>{w.create()}),1e3)):(document.querySelector(".volet").style.height="70%",w.create()),I()),T="Contact"})),E.addEventListener("click",(function(e){console.log(T),L(e.target.innerText)&&(document.querySelector(".main")&&j(),document.querySelector(".visible")&&(document.querySelector(".visible").style.height="0%",y.classList.remove("visible")),setTimeout((()=>{C.display()}),100)),T="Home"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,